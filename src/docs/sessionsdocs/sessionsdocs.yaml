openapi: 3.0.0
info:
  title: Nische Store API
  description: Documentación de la API de Nische Store - Módulo de Sesiones
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Desarrollo
paths:
  /api/sessions/login:
    get:
      summary: Renderizar página de inicio de sesión
      description: Renderiza la página de inicio de sesión para que el usuario pueda iniciar sesión.
      tags:
        - Sesiones
      responses:
        '200':
          description: Página de inicio de sesión renderizada con éxito.
        '500':
          description: Error interno del servidor al renderizar la página.
    post:
      summary: Iniciar sesión de usuario
      description: Inicia sesión de usuario utilizando el método de autenticación local (nombre de usuario y contraseña).
      tags:
        - Sesiones
      parameters:
        - in: body
          name: credentials
          required: true
          description: Credenciales de inicio de sesión del usuario (nombre de usuario y contraseña).
          schema:
            type: object
            properties:
              email:
                type: string
                example: usuario@example.com
              password:
                type: string
                example: contraseña123
      responses:
        '200':
          description: Inicio de sesión exitoso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Usuario inició sesión con éxito.
                  payload:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 1234567890
                      email:
                        type: string
                        example: usuario@example.com
                      firstName:
                        type: string
                        example: Juan
                      lastName:
                        type: string
                        example: Pérez
                      age:
                        type: number
                        example: 30
                      role:
                        type: string
                        example: user
                      cartID:
                        type: string
                        example: abcdef1234
        '400':
          description: Credenciales inválidas o faltantes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Credenciales inválidas o faltantes.
        '500':
          description: Error interno del servidor al iniciar sesión
  /api/sessions/logout:
    get:
      summary: Cerrar sesión de usuario
      description: Cierra la sesión de un usuario, eliminando su sesión actual y cookies de autenticación.
      tags:
        - Sesiones
      responses:
        '200':
          description: Sesión cerrada con éxito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la respuesta.
                  message:
                    type: string
                    description: Mensaje de éxito.
        '500':
          description: Error interno del servidor al cerrar sesión.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la respuesta.
                  message:
                    type: string
                    description: Mensaje de error.
  /api/sessions/register:
    get:
      summary: Renderizar página de registro
      description: Renderiza la página de registro para que los usuarios puedan registrarse.
      tags:
        - Sesiones
      responses:
        '200':
          description: Página de registro renderizada con éxito.
          content:
            text/html:
              schema:
                type: string
                description: Contenido HTML de la página de registro.
    post:
      summary: Registro de usuario
      description: Registra un nuevo usuario en el sistema.
      tags:
        - Sesiones
      requestBody:
        description: Datos de registro del usuario.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Correo electrónico del usuario.
                firstName:
                  type: string
                  description: Nombre del usuario.
                lastName:
                  type: string
                  description: Apellido del usuario.
                age:
                  type: integer
                  description: Edad del usuario.
                password:
                  type: string
                  description: Contraseña del usuario.
      responses:
        '201':
          description: Usuario registrado con éxito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la respuesta.
                  message:
                    type: string
                    description: Mensaje de éxito.
                  payload:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: ID del usuario registrado.
                      email:
                        type: string
                        description: Correo electrónico del usuario.
                      firstName:
                        type: string
                        description: Nombre del usuario.
                      lastName:
                        type: string
                        description: Apellido del usuario.
                      role:
                        type: string
                        description: Rol del usuario.
                      age:
                        type: integer
                        description: Edad del usuario.
                      cartID:
                        type: string
                        description: ID del carrito asociado al usuario.
        '500':
          description: Error interno del servidor al registrar al usuario.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la respuesta.
                  message:
                    type: string
                    description: Mensaje de error.
  /api/sessions/failregister:
    get:
      summary: Registro de usuario fallido
      description: Se utiliza para manejar un registro de usuario fallido.
      tags:
        - Sesiones
      responses:
        '400':
          description: Registro de usuario fallido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la respuesta.
                  message:
                    type: string
                    description: Mensaje de error.
  /api/sessions/faillogin:
    get:
      summary: Inicio de sesión fallido
      description: Se utiliza para manejar un intento de inicio de sesión fallido.
      tags:
        - Sesiones
      responses:
        '400':
          description: Inicio de sesión fallido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la respuesta.
                  message:
                    type: string
                    description: Mensaje de error.
  /api/sessions/github:
    get:
      summary: Iniciar sesión con GitHub
      description: Inicia sesión utilizando la estrategia de autenticación de GitHub.
      tags:
        - Sesiones
      parameters:
        - name: scope
          in: query
          description: Alcance de autenticación de GitHub (opcional)
          schema:
            type: string
      responses:
        '302':
          description: Redirige a la página de inicio de sesión de GitHub.
        '500':
          description: Error interno del servidor durante la autenticación.
  /api/sessions/githubcallback:
    get:
      summary: Callback de autenticación de GitHub
      description: Callback de autenticación de GitHub utilizado para registrar a los usuarios autenticados a través de GitHub.
      tags:
        - Sesiones
      responses:
        '302':
          description: Redirige a la página de productos después de la autenticación exitosa.
        '500':
          description: Redirige a la página de inicio de sesión en caso de fallo en la autenticación.
  /api/sessions/current:
    get:
      summary: Obtener información del usuario actual
      description: Esta ruta se utiliza para obtener información sobre el usuario actual y renderizar su perfil en la página.
      tags:
        - Sesiones
      responses:
        '200':
          description: Información del usuario actual obtenida y perfil renderizado exitosamente.
        '500':
          description: Error al renderizar la información del usuario actual.
components:
  schemas:
    UserDTO:
      type: object
      properties:
        isAdmin:
          type: boolean
          description: Indica si el usuario es un administrador.
        isPremium:
          type: boolean
          description: Indica si el usuario tiene una cuenta premium.
        firstName:
          type: string
          description: Nombre del usuario.
        lastName:
          type: string
          description: Apellido del usuario.
        email:
          type: string
          description: Correo electrónico del usuario.
        role:
          type: string
          description: Rol del usuario.
        age:
          type: integer
          description: Edad del usuario.
        cartID:
          type: string
          description: ID del carrito del usuario.
        userID:
          type: string
          description: ID único del usuario.
        profileImage:
          type: string
          description: URL de la imagen de perfil del usuario.

definitions:
  UserDTO:
    type: object
    properties:
      isAdmin:
        type: boolean
        description: Indica si el usuario es un administrador.
      isPremium:
        type: boolean
        description: Indica si el usuario tiene una cuenta premium.
      firstName:
        type: string
        description: Nombre del usuario.
      lastName:
        type: string
        description: Apellido del usuario.
      email:
        type: string
        description: Correo electrónico del usuario.
      role:
        type: string
        description: Rol del usuario.
      age:
        type: integer
        description: Edad del usuario.
      cartID:
        type: string
        description: ID del carrito del usuario.
      userID:
        type: string
        description: ID único del usuario.
      profileImage:
        type: string
        description: URL de la imagen de perfil del usuario.
